name: CICD - Raspberry Pi Imager
on:
  push:
    branches: [ master ]

jobs:
  rpi_image_release:
    permissions:
      contents: write
    name: "Build images"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #release: [ "3.16.6", "3.17.4", "3.18.2" ]
        #platform: [ rpi, rpi4, aarch64 ]
        release: [ "3.17.4", "3.18.2" ]
        platform: [ rpi, rpi4 ]
    steps:
      - name: Check out from head
        id: checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Create storage directories
        id: mkdir
        run: |
          mkdir ${GITHUB_WORKSPACE}/artifact
          mkdir ${GITHUB_WORKSPACE}/image

      - name: Setup qemu environment
        uses: docker/setup-qemu-action@v2
      - name: Setup buildx environment
        uses: docker/setup-buildx-action@v2

      - name: Build ${{ matrix.release }} ${{ matrix.platform }}
        id: build
        run: |
          ${GITHUB_WORKSPACE}/imager_release.sh ${{ matrix.release }} ${{ matrix.platform }}
      - name: Compress image
        id: compress
        run: |
          gzip -k ${GITHUB_WORKSPACE}/image/alpine-${{ matrix.release }}-${{ matrix.platform }}.img
      - name: Upload uncompressed image artifact
        uses: actions/upload-artifact@v3
        with:
          name: alpine-${{ matrix.release }}-${{ matrix.platform }}.img
          path: ${GITHUB_WORKSPACE}/image/alpine-${{ matrix.release }}-${{ matrix.platform }}.img
      - name: Upload compressed image artifact
        uses: actions/upload-artifact@v3
        with:
          name: alpine-${{ matrix.release }}-${{ matrix.platform }}.img.gz
          path: ${GITHUB_WORKSPACE}/image/alpine-${{ matrix.release }}-${{ matrix.platform }}.img.gz
      - name: Upload build log artifact
        uses: actions/upload-artifact@v3
        with:
          name: alpine-${{ matrix.release }}-${{ matrix.platform }}.log
          path: ${GITHUB_WORKSPACE}/image/alpine-${{ matrix.release }}-${{ matrix.platform }}.log


  upload_release:
    needs: rpi_image_release
    permissions:
      contents: write
    name: "Publish Release"
    runs-on: ubuntu-latest
    steps:
      ## Delete old release assets
      - name: Delete old release assets
        id: delete_assets
        uses: "marvinpinto/action-automatic-releases@latest"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: auto-latest
      ## Upload the artifacts to the release
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: auto-latest
          tag_name: auto-latest
          fail_on_unmatched_files: true
          body: Automatic release - ${{ github.sha }}
          files: |
            alpine*.img
            alpine*.img.gz
            alpine*.log