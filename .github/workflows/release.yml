name: CICD - Raspberry Pi Imager
on:
  push:
    branches: [ master ]

jobs:
  rpi_image_release:
    permissions:
      contents: write
    name: "Build images"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        release: [ "3.16", "3.17", "3.18" ]
        platform: [ rpi, rpi4 ]
    steps:
      - name: Check out from head
        id: checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Create storage directories
        id: mkdir
        run: |
          mkdir ${GITHUB_WORKSPACE}/artifact
          mkdir ${GITHUB_WORKSPACE}/image

      - name: Setup qemu environment
        uses: docker/setup-qemu-action@v2
      - name: Setup buildx environment
        uses: docker/setup-buildx-action@v2

      - name: Build ${{ matrix.release }} ${{ matrix.platform }}
        id: build
        run: |
          ${GITHUB_WORKSPACE}/imager_release.sh ${{ matrix.release }} ${{ matrix.platform }}
      - name: Compress image
        id: compress
        run: |
          gzip -k ${GITHUB_WORKSPACE}/image/alpine-${{ matrix.release }}*-${{ matrix.platform }}.img
      - name: Generate checksums
        run: |
          for x in `ls ${GITHUB_WORKSPACE}/image/alpine-${{ matrix.release }}*-${{ matrix.platform }}.img*`; do 
          sha256sum $x > $x.sha256
          done
      - name: Upload image artifact
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: release_artifact
          path: ${{ github.workspace }}/image/

  upload_release:
    needs: rpi_image_release
    permissions:
      contents: write
    name: "Publish Release"
    runs-on: ubuntu-latest
    steps:
      ## We have to retrieve all the artifacts manually. Terrible design.
      - name: Download uncompressed image artifact
        uses: actions/download-artifact@v3
        with:
          path: ${{ github.workspace }}/
      ## DEBUG
      #- name: show what we got
      #  run: ls -lR
      ## Delete old release assets
      - name: Delete old release assets
        id: delete_assets
        uses: "marvinpinto/action-automatic-releases@latest"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: latest
      ## Upload the artifacts to the release
      - name: Upload release assets
        uses: marvinpinto/action-automatic-releases@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #uses: softprops/action-gh-release@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: "latest"
          draft: false
          title: "Automatic Release"
          files: |
            ${{ github.workspace }}/release_artifact/alpine*.img
            ${{ github.workspace }}/release_artifact/alpine*.img.sha256
            ${{ github.workspace }}/release_artifact/alpine*.img.gz.sha256
            ${{ github.workspace }}/release_artifact/alpine*.log